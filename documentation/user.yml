/api/users/register:
  post:
    summary: "Create a new user"
    tags:
      - User
    description: "Creates a new user in the system"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          type: "object"
          required:
            - "firstName"
            - "lastName"
            - "email"
            - "role"
          properties:
            firstName:
              type: "string"
            lastName:
              type: "string"
            email:
              type: "string"
            role:
              type: "string"
    responses:
      201:
        description: "User created"
      400:
        description: "Invalid input"

/api/users/signin:
  post:
    tags:
      - User
    description: User sign in
    parameters:
      - name: email
        in: body
        type: string
        required: true
      - name: password
        in: body
        type: string
        required: true
    responses:
      200:
        description: Sign in successful

/api/users/logout:
  get:
    tags:
      - User
    description: User logout
    security:
      - bearerAuth: -[]
    responses:
      200:
        description: Logged out successfully
      500:
        description: Internal Server Error

/api/users/updateUser/:id:
  put:
    summary: "Update a user "
    tags:
      - User
    description: "Updates an existing user in a system"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        schema:
          type: "object"
          required:
            - "firstName"
            - "lastName"
            - "email"
            - "role"
          properties:
            firstName:
              type: "string"
            lastName:
              type: "string"
            email:
              type: "string"
            role:
              type: "string"
    responses:
      201:
        description: "User updated successfully"
      400:
        description: "User not found"
